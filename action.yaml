# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-action.json
name: 'publish-nuget'
description: 'Publishes a NuGet package.'

inputs:
  package-name:
    description: 'Name of the NuGet package, e.g. Newtonsoft.Json'
    required: true
  nuget-key:
    description: 'API key with which to authenticate with NuGet.org'
    required: true
  nupkg-dir:
    description: 'Directory in which to find the NuGet .nupkg file'
    required: true
  dotnet:
    description: 'Path to the `dotnet` executable.'
    required: false
    default: 'dotnet'

runs:
  using: "composite"
  steps:
    - name: Publish to NuGet
      shell: bash
      id: publish-success
      env:
        NUGET_API_KEY: ${{ inputs.nuget-key }}
        PACKAGE_DIR: ${{ inputs.nupkg-dir }}
        PACKAGE_NAME: ${{ inputs.package-name }}
        DOTNET_EXE: ${{ inputs.dotnet }}
      run: '$GITHUB_ACTION_PATH/nuget_push.sh "$PACKAGE_DIR"/"$PACKAGE_NAME".*.nupkg'
    - name: Wait for availability
      shell: bash
      id: await-package
      if: steps.publish-success.outputs.result == 'published'
      env:
        PACKAGE_VERSION: ${{ steps.publish-success.outputs.version }}
        PACKAGE_NAME: ${{ inputs.package-name }}
      run: |
        echo "$PACKAGE_VERSION" && \
        dest=$(mktemp --tmpdir tmp.XXXXXXXXXX.nupkg) && \
        rm "$dest" && \
        while ! curl -L --fail -o "$dest" "https://www.nuget.org/api/v2/package/$PACKAGE_NAME/$PACKAGE_VERSION" ; do \
          sleep 10;\
        done && \
        echo "downloaded_nupkg=$dest" >> "$GITHUB_OUTPUT"
    # NuGet.org inserts a signature file into uploaded packages.
    # So we have to *re-attest* it after it's uploaded.
    - name: Assert package contents
      shell: bash
      if: steps.publish-success.outputs.result == 'published'
      run: '$GITHUB_ACTION_PATH/assert_contents.sh'
      env:
        DOWNLOADED_NUPKG: ${{ steps.await-package.outputs.downloaded_nupkg }}
        ORIGINAL_NUPKG_DIR: ${{ inputs.nupkg-dir }}
        PACKAGE_NAME: ${{ inputs.package-name }}
    - name: Attest Build Provenance
      if: steps.publish-success.outputs.result == 'published'
      uses: actions/attest-build-provenance@310b0a4a3b0b78ef57ecda988ee04b132db73ef8 # v1.4.1
      with:
        subject-path: ${{ steps.await-package.outputs.downloaded_nupkg }}
